{"version":3,"sources":["constants.js","actions.js","components/TaskList.js","components/TaskBar.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["prefix","ADD_TASK","DELETE_TASK","UPDATE_TASK","ADD_TODO","DELETE_TODO","addTask","payload","type","deleteTask","filteredTasks","updateTask","updatedTasks","addToDoList","deleteToDoList","TaskList","props","tasks","taskList","length","className","duration","easing","map","item","id","key","value","description","onChange","e","updateAddedTask","target","onClick","deleteAddedTask","icon","onSubmit","addNewToDoList","placeholder","currentToDo","handleToDoInputChange","toDoList","taskKey","completed","updateAddedToDoItem","deleteAddedToDoItem","library","add","faTrash","TaskBar","handleTaskInputChange","setState","currentTask","Date","now","addNewTask","preventDefault","actions","state","filter","task","push","toDoItemKey","taskListItem","todoListItem","toDoListItemKey","forEach","this","Component","App","defaultProps","connect","dispatch","bindActionCreators","appActions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","action","applyMiddleware","createLogger","store","createStore","toDoReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f221cbfa.chunk.js","sourcesContent":["const prefix = '/app/ToDotask/';\r\n\r\nexport const ADD_TASK = `${prefix}ADD_TASK`;\r\nexport const DELETE_TASK = `${prefix}DELETE_TASK`;\r\nexport const UPDATE_TASK = `${prefix}UPDATE_TASK`;\r\nexport const ADD_TODO = `${prefix}ADD_TODO`;\r\nexport const DELETE_TODO = `${prefix}DELETE_TODO`;\r\nexport const UPDATE_TODO = `${prefix}UPDATE_TODO`;","import {\r\n    ADD_TASK,\r\n    DELETE_TASK,\r\n    UPDATE_TASK,\r\n    ADD_TODO,\r\n    DELETE_TODO\r\n  } from './constants';\r\n  \r\n  export function addTask(payload) {\r\n    return {\r\n      type: ADD_TASK,\r\n      payload,\r\n    };\r\n  }\r\n  \r\n  export function deleteTask({filteredTasks}) {\r\n    return {\r\n      type: DELETE_TASK,\r\n      payload: filteredTasks,\r\n    };\r\n  }\r\n\r\n  export function updateTask({updatedTasks}) {\r\n    return {\r\n      type: UPDATE_TASK,\r\n      payload: updatedTasks,\r\n    };\r\n  }\r\n\r\n  export function addToDoList({updatedTasks}) {\r\n    return {\r\n      type: ADD_TODO,\r\n      payload: updatedTasks,\r\n    };\r\n  }\r\n\r\n  export function deleteToDoList({filteredTasks}) {\r\n    return {\r\n      type: DELETE_TODO,\r\n      payload: filteredTasks,\r\n    };\r\n  }\r\n  /*\r\n  \r\n  export function getAgentDetail(payload) {\r\n    return {\r\n      type: GET_AGENT_DETAIL,\r\n      payload,\r\n    };\r\n  }\r\n  \r\n  export function setAgentDetail(payload) {\r\n    return {\r\n      type: SET_AGENT_DETAIL,\r\n      payload,\r\n    };\r\n  }\r\n  \r\n  export function getRiskMeterRequestData(payload) {\r\n    return {\r\n      type: GET_RISK_METER_REQUEST_DATA,\r\n      payload,\r\n    };\r\n  }\r\n  \r\n  export function setResult(payload) {\r\n    return {\r\n      type: SET_RESULT,\r\n      payload,\r\n    };\r\n  }\r\n  \r\n  export function getResult(payload) {\r\n    return {\r\n      type: GET_RESULT,\r\n      payload,\r\n    };\r\n  }\r\n  \r\n  export function getResultUsingMobileNo(payload) {\r\n    return {\r\n      type: GET_RESULT_USING_MOBILE_NO,\r\n      payload,\r\n    };\r\n  } */\r\n  ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\nimport './index.css';\r\n\r\nconst TaskList = (props) => {\r\n    \r\n    const renderToDoList = (toDoList,taskKey) => {\r\n        return toDoList.map((item)=> {\r\n            return (\r\n                <div className=\"list task-list-item\" key={`list task-list-item-${item.key}`}>\r\n                    <p>\r\n                        <input type=\"checkbox\" value={item.completed} onChange={(e)=>props.updateAddedToDoItem(e.target.value, taskKey, item.key,'completed')}/>\r\n                        <input type=\"text\" value={item.description} onChange={(e)=>props.updateAddedToDoItem(e.target.value, taskKey, item.key,'description')}/>\r\n                        <span>\r\n                        <FontAwesomeIcon className=\"faicons\" onClick={(e) => {\r\n                            props.deleteAddedToDoItem(taskKey, item.key)\r\n                        }} icon=\"trash\" />\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n    \r\n    const renderEachTask = (tasks)=> {\r\n        return tasks.map((item)=> {\r\n            return (\r\n                <div className=\"task-list-item-wrapper\" key={`task-list-item-wrapper-${item.key}`}>\r\n                    <div className=\"list task-list-header\">\r\n                        <p>\r\n                            <input type=\"text\" id={item.key} value={item.description} onChange={(e)=>props.updateAddedTask(e.target.value,item.key)}/>\r\n                            <span>\r\n                            <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n                                props.deleteAddedTask(item.key)\r\n                            }} icon=\"trash\" />\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"task-list-body\" key={`task-list-body-${item.key}`}>\r\n                        <header>\r\n                            <form className=\"to-do-list-form\" onSubmit={(e) => props.addNewToDoList(e,item.key)}>\r\n                            <div className=\"flex flex-no-wrap flex-align-items-center flex-justify-content-space-between p-top-bottom-10\">\r\n                                <div>\r\n                                    <input type=\"text\" placeholder=\"Enter to do\" value={item.currentToDo.description} onChange={(e) => props.handleToDoInputChange(e.target.value,item.key)}></input>\r\n                                </div>\r\n                                <div>\r\n                                    <button type=\"submit\">Add To Do</button>\r\n                                </div>\r\n                            </div>\r\n                            </form>\r\n                        </header>\r\n                        {renderToDoList(item.toDoList, item.key)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    const {taskList} = props;\r\n    if(!taskList.length){\r\n        return <div className=\"no-tasks-added\">No tasks added yet!</div>\r\n    }\r\n    return (\r\n        <div className=\"task-lists\">\r\n            <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {renderEachTask(taskList)}\r\n            </FlipMove>\r\n        </div>\r\n    );\r\n}\r\n\r\nTaskList.propTypes = {\r\n    actions: PropTypes.object.isRequired,\r\n    taskList: PropTypes.array.isRequired,\r\n    deleteAddedTask: PropTypes.func.isRequired,\r\n    updateAddedTask: PropTypes.func.isRequired,\r\n    updateAddedToDoItem: PropTypes.func.isRequired,\r\n    handleToDoInputChange: PropTypes.func.isRequired,\r\n    deleteAddedToDoItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskList;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TaskList from './TaskList';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faTrash);\r\n\r\nexport default class TaskBar extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentTask: {\r\n                description: '',\r\n                key: '',\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTaskInputChange = (e,type) => {\r\n        this.setState({currentTask: {\r\n            description: e.target.value,\r\n            key: Date.now(),\r\n        }});\r\n    }\r\n\r\n    addNewTask = (e) => {\r\n        e.preventDefault();\r\n        const {actions} = this.props;\r\n        const {currentTask} = this.state;\r\n        if(currentTask.description !==\"\" && currentTask.description.length >=3){\r\n            this.setState({currentTask:{\r\n                    description:'',\r\n                    key:''\r\n                }\r\n            });\r\n            const currentToDo = {\r\n                description:'',\r\n                key:''\r\n            };\r\n            actions.addTask({...currentTask, currentToDo, toDoList: [] });\r\n        }\r\n    }\r\n\r\n    deleteAddedTask = (key) => {\r\n        const {actions, taskList} = this.props;\r\n        const filteredTasks = taskList.filter(item =>item.key!==key);\r\n        actions.deleteTask({filteredTasks});\r\n    }\r\n\r\n    updateAddedTask = (description,key) => {\r\n        const {actions, taskList} = this.props;\r\n        const updatedTasks = taskList.map(item=>{      \r\n            if(item.key === key){\r\n              item.description = description;\r\n            }\r\n            return item;\r\n        });\r\n        actions.updateTask({updatedTasks});\r\n    }\r\n\r\n    \r\n    handleToDoInputChange = (description,key) => {\r\n        const {actions, taskList} = this.props;\r\n        const updatedTasks = taskList.map(item=>{      \r\n            if(item.key === key){\r\n              item.currentToDo.description = description;\r\n              item.currentToDo.key = Date.now();\r\n            }\r\n            return item;\r\n        });\r\n        actions.updateTask({updatedTasks});\r\n    }\r\n\r\n    addNewToDoList = (e,key) => {\r\n        e.preventDefault();\r\n        const {actions, taskList} = this.props;\r\n            const updatedTasks = taskList.map((task) => {\r\n                if(task.key === key && task.currentToDo.description !== \"\" && task.currentToDo.description.length >=3){\r\n                    task.toDoList.push({...task.currentToDo});\r\n                    task.currentToDo.description = '';\r\n                    task.currentToDo.key = '';\r\n                }\r\n                return task;\r\n            });\r\n            actions.addToDoList({updatedTasks});\r\n    }\r\n\r\n    deleteAddedToDoItem = (taskKey,toDoItemKey) => {\r\n        const {actions, taskList} = this.props;\r\n        const filteredTasks = taskList.map(taskListItem =>{\r\n            if(taskListItem.key === taskKey){\r\n                taskListItem.toDoList = taskListItem.toDoList.filter((todoListItem)=>todoListItem.key !== toDoItemKey);\r\n            }\r\n            return taskListItem;\r\n        });\r\n        actions.deleteToDoList({filteredTasks});\r\n    }\r\n\r\n    updateAddedToDoItem = (value,taskKey,toDoListItemKey,type) => {\r\n        const {actions, taskList} = this.props;\r\n        const updatedTasks = taskList.map(taskListItem=>{      \r\n            if(taskListItem.key === taskKey){\r\n                taskListItem.toDoList.forEach((todoListItem)=> {\r\n                    if(todoListItem.key === toDoListItemKey){\r\n                        todoListItem[type] = value;\r\n                    }\r\n                })\r\n            }\r\n            return taskListItem;\r\n        });\r\n        actions.updateTask({updatedTasks});\r\n    }\r\n\r\n    render(){\r\n        const {currentTask: {description} } = this.state;\r\n        return(\r\n        <div className=\"to-do-task-wrapper\">\r\n        <header>\r\n            <h2 className=\"text-center text-bold p-top-bottom-10 m-top-bottom-0\">To do Task App</h2>\r\n            <form className=\"to-do-task-form\" onSubmit={(e) => this.addNewTask(e)}>\r\n            <div className=\"flex flex-no-wrap flex-align-items-center flex-justify-content-space-between p-top-bottom-10\">\r\n                <div>\r\n                    <input type=\"text\" placeholder=\"Enter task\" value= {description} onChange={(e) => this.handleTaskInputChange(e)}></input>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">Add Task</button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        </header>\r\n        <TaskList deleteAddedTask={this.deleteAddedTask} \r\n        updateAddedTask={this.updateAddedTask} \r\n        addNewToDoList={this.addNewToDoList} \r\n        updateAddedToDoItem={this.updateAddedToDoItem} \r\n        handleToDoInputChange={this.handleToDoInputChange} \r\n        deleteAddedToDoItem={this.deleteAddedToDoItem}\r\n        {...this.props}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nTaskBar.propTypes = {\r\n    actions: PropTypes.object.isRequired,\r\n    taskList: PropTypes.array.isRequired,\r\n};\r\n\r\n\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as appActions from './actions';\nimport TaskBar from './components/TaskBar';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <TaskBar {...this.props} />\n      </div>\n    );\n  }\n};\n\nApp.propTypes = {\n  actions: PropTypes.object.isRequired,\n  tasks: PropTypes.array,\n};\n\nApp.defaultProps = {\n  tasks: [],\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    taskList: state.tasks.taskList,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  actions: bindActionCreators({ ...appActions, }, dispatch),\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers,applyMiddleware} from 'redux';\r\nimport {createLogger} from 'redux-logger';\r\nimport {ADD_TASK, DELETE_TASK, UPDATE_TASK, ADD_TODO, DELETE_TODO} from './constants';\r\n\r\nconst initialState = {\r\n    taskList: [],\r\n};\r\n\r\nconst toDoReducer = (state=initialState,action) => {\r\n    switch(action.type){\r\n        case ADD_TASK: {\r\n            return state = { taskList : [...state.taskList,action.payload]};\r\n        }\r\n        case DELETE_TASK:\r\n        case UPDATE_TASK: {\r\n            return state = {taskList : [...action.payload]};\r\n        }\r\n        case ADD_TODO: {\r\n            return state = { taskList : [...action.payload]};\r\n        }\r\n        case DELETE_TODO: {\r\n            return state = { taskList : [...action.payload]};\r\n        }\r\n        default: \r\n        return state;\r\n    }\r\n},\r\nreducers = combineReducers({tasks: toDoReducer},applyMiddleware(createLogger()));\r\n\r\nexport default reducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport toDoReducer from './reducer';\n\nlet store = createStore(toDoReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}